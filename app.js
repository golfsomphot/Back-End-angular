const express = require('express'); //ทำการ import express เข้ามาใช้งาน โดยสร้างตัวแปร express ขึ้นมาเพื่อรับค่า
const app = express(); //ทำการสร้าง Instance ของ express และสร้างตัวแปร app ขึ้นมาเพื่อรับค่า
const port = 9000;  //สร้างตัวแปร PORT ขึ้นมารับค่า port ในกรณีที่เราได้กำหนดไว้ใน environment ของเครื่อง
//แต่ถ้าไม่ได้กำหนดไว้ เราจะใช้ค่า 9000 แทน
const bodyParser = require('body-parser');  //import เข้ามาใช้งาน เพื่อ แปลงข้อมูล JSON: ถ้าคำขอ HTTP ส่งข้อมูลในรูปแบบ JSON ผ่าน body ของคำขอ (เช่นข้อมูล API) bodyParser สามารถแปลง JSON นั้นให้กลายเป็นข้อมูล JavaScript ได้.
var cors = require("cors"); // import เข้ามาเพื่อ เป็นเทคโนโลยีที่ใช้ในเว็บแอปพลิเคชันเพื่ออนุญาตหรือป้องกันการเข้าถึงข้อมูลระหว่างโดเมน
const route = require('./route'); // (import) โมดูลหรือไฟล์ JavaScript ที่ชื่อ "route" หรืออยู่ในไดเรกทอรีเดียวกับไฟล์ที่กำลังใช้คำสั่งนี้ โดยไฟล์ "route" นั้นจะถูกสร้างขึ้นเพื่อใช้ในการกำหนดเส้นทาง (routes) สำหรับการจัดการคำขอ
app.use(bodyParser.json());//บรรทัดนี้ใช้ middleware ที่ชื่อว่า bodyParser เพื่ออ่านและแปลงข้อมูลในรูปแบบ JSON ที่ถูกส่งมาในร้องขอ HTTP ให้อยู่ในรูปแบบของ JavaScript objects ซึ่งทำให้คุณสามารถเข้าถึงข้อมูลในร้องขอได้ง่ายๆ โดยไม่ต้องแปลงเอง.
app.use(cors());// บรรทัดนี้ใช้ middleware ที่ชื่อว่า cors เพื่อกำหนดการตอบรับคำขอ CORS ที่อนุญาตให้เว็บแอปพลิเคชันอื่นสามารถเรียกใช้แอปพลิเคชัน Node.js ของคุณได้ โดยอนุญาตแบบไม่จำกัดเดสติเนชัน (CORS) ซึ่งเป็นสิ่งสำคัญเมื่อทำการส่งคำขอ HTTP ระหว่างโดเมนที่แตกต่างกัน.
route.configure(app);// บรรทัดนี้เรียกใช้ฟังก์ชัน configure ในโมดูล route ซึ่งอาจจะเป็นการกำหนดเส้นทาง (routes) และการจัดการคำขอ HTTP ของแอปพลิเคชัน Node.js ของคุณ โดยโมดูล route นี้จะถูกนำเข้ามาก่อนเพื่อใช้งาน.


app.listen(port, () => {
console.log(`Listening at http://localhost:${port}`); // บรรทัดนี้ใช้ในการเริ่มต้นเซิร์ฟเวอร์ HTTP ในพอร์ตที่กำหนด (ในที่นี้คือ port) โดยเมื่อเซิร์ฟเวอร์ถูกเริ่มต้นคุณจะเห็นข้อความ "Listening at http://localhost:port" บนคอนโซล (console) แสดงว่าเซิร์ฟเวอร์เริ่มทำงานและพร้อมรอรับคำขอ HTTP จากเบราวเซอร์.
});